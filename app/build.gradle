/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id "org.beryx.jlink" version "2.26.0"
}

sourceCompatibility = 17
targetCompatibility = 17

javafx {
    version = "20"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.21'
}

application {
    // Define the main class for the application.
    mainClass = 'McLauncher.App'
    mainModule = 'McLauncher'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jlink {
    forceMerge('log4j-api')
    jpackage {
        imageName = "McLauncher-SC"
        installerName = 'McLauncher-SC'
        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            installerOptions += [
                    '--win-dir-chooser',
                    '--win-menu',
                    '--win-menu-group', '"McLauncher SC"',
                    '--win-shortcut',
                    '--win-upgrade-uuid', 'ecf02c0a-afb5-4e40-98f8-17da81aeffed']
            icon = 'src/main/resources/icon.ico'
        }
        else if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
            installerOptions += ['--linux-shortcut', '--linux-app-category', 'Game']
            icon = 'src/main/resources/icon.png'
        }
        else{
            icon = 'src/main/resources/icon.png'
        }
    }
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

jar {
    manifest {
        attributes(
                'Main-Class': 'McLauncher.App'
        )
    }
}
